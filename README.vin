This is a customized ROMIO branch for Supercomputing 2020 AD/AE appendix review. 
This branch contains all algorithms evaluated in the paper except TAM.
We built static libraries from this ROMIO customized branch (both ad_gpfs and ad_lustre) for evaluations of experiments in our paper.
To compile a static library on NERSC Cori for example, please take the following steps.
For stage 5, you have to install autoconf, libtool, and automake in the same repository (or you can install with Anaconda on Cori.)
0. cd mpich_develop
1. git clone https://github.com/QiaoK/mpich
2. cd mpich
3. git checkout ad_lustre_alltoallw
4. git submodule update --init
5. ./autogen.sh
6. cd src/mpi/romio/
7. ./configure --prefix=$HOME/mpich_develop/mpich-install --with-file-system=ufs+lustre --with-mpi-impl=MPICH --silent --disable-shared CFLAGS=-O2 CC=cc --disable-f77 --disable-f90
8. make -j8
9. make install

The static ROMIO library should be ready in your $HOME/mpich_develop/mpich-install/bin.
To link to your library, you can add $HOME/mpich_develop/mpich-install/bin/libromio.a when you link object files of your applications.
You can set the following environmental variables in your submission script like the following.
export ROMIO_COMM_LIMIT=32   (Maximum number of receive operation is 32 for communication kernels)
export ROMIO_COMM_META_TYPE=4 (Metadata communication algorithm is number 4)
export ROMIO_COMM_TYPE=4 (data communication algorithm is number 4)
To see communication algorithms, you may refer to https://github.com/QiaoK/mpich/blob/ad_lustre_alltoall/src/mpi/romio/adio/common/ad_aggregate.c for function int all_to_all_selection.
